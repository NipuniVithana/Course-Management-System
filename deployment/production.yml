# Production Deployment Configuration
version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: cms_mysql_prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./backups:/backups
    networks:
      - cms_prod_network
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  backend:
    build:
      context: ../backend
      dockerfile: ../deployment/Dockerfile.backend
    container_name: cms_backend_prod
    environment:
      SPRING_PROFILES_ACTIVE: production
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    depends_on:
      - mysql
    networks:
      - cms_prod_network
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  frontend:
    build:
      context: ../frontend
      dockerfile: ../deployment/Dockerfile.frontend
    container_name: cms_frontend_prod
    depends_on:
      - backend
    networks:
      - cms_prod_network
    restart: always

  nginx:
    image: nginx:alpine
    container_name: cms_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - cms_prod_network
    restart: always

volumes:
  mysql_prod_data:
    driver: local

networks:
  cms_prod_network:
    driver: bridge
