version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: cms_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-course_management_system}
      MYSQL_USER: ${MYSQL_USER:-cms_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-cms_password}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../database/sample_data.sql:/docker-entrypoint-initdb.d/02-sample_data.sql
    networks:
      - cms_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot Backend
  backend:
    build:
      context: ../backend
      dockerfile: ../deployment/Dockerfile.backend
    container_name: cms_backend
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-production}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE:-course_management_system}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-cms_user}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-cms_password}
      JWT_SECRET: ${JWT_SECRET:-mySecretKey}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - cms_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: ../deployment/Dockerfile.frontend
    container_name: cms_frontend
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      - backend
    networks:
      - cms_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: cms_nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - cms_network
    restart: unless-stopped

  # phpMyAdmin (Optional - for database management)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: cms_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER:-cms_user}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-cms_password}
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"
    depends_on:
      - mysql
    networks:
      - cms_network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  cms_network:
    driver: bridge
